FORMAT: 1A
HOST: http://pricing.wapanda.net

# Pricing Engine
Pricing engine provides functionality for ride and trip pricing calculations.
This document details the API for pricing engine's HTTP interface.

## Estimate [/estimate]

### Estimate ride price [POST]
* Pricing engine is provided a planned trip route and multiple available rides. 
* Pricing engine provides estimated trip price of each ride, based on ride's driver rate.

+ Request (application/json)
    + Attributes (object)
        + `route` (Route, required) - Planned route
        + `rides` (array[Ride], required) - Available rides


+ Response 200 (application/json)
    + Attributes (array[RidePrice])


## Fair Price [/fairprice]

### Predict fair price [POST]
* Pricing engine is provided a planned trip route and car type.
* Pricing engine provides estimates of fair prices for such a trip.

+ Request (application/json)
    + Attributes (object)
        + `route` (Route, required) - Planned route
        + `carType` (CarType, required) - Car type
        
+ Response 200 (application/json)
    + Attributes (FairPrice)


## Finalize [/finalize]

### Save trip and adjust price [POST]
* Pricing engine is provided with information of an ended trip.
* Pricing engine save the useful information for future analysis.
* Pricing engine provides an adjusted trip price, based on applicable changes applied.


+ Request (application/json)
    + Attributes (TripInfo)
        
+ Response 200 (application/json)
    + Attributes (PriceAdjust)



# Data Structures

## MoneyRepresentation (object)
Describes the typical minimum amount of money increments and currency code ISO 4217.
Examples:
USD is a typical currency trading in cents.  
JPY is a typical currency trading in units of Yens. 
### Properties
+ `increment`: 0.01 (number, required) - Minimum amount of money increments 
+ `isocode`: `USD` (string, required) - Currency code ISO 4217


## GeoPoint (object)
A GeoJSON Point type geometry
### Properties
+ `type`: `point` (string, required) - Type of GeoJSON Geometry
+ `coordinates`: 77.68,24.56 (array[number], required) - Point position coordinates


## CarType (enum)
+ `Taxi` (string)
+ `Standard` (string)
+ `SUV` (string)
+ `XL` (string)
+ `BlackCar` (string)


## Route (object)
Planned trip route
### Properties
+ `from` (GeoPoint, required) - Trip start location
+ `to` (GeoPoint, required) - Trip end location
+ `estDistance`: 6800 (number, required) - Estimated distance in meters
+ `estDuration`: 3649 (number, required) - Estimated duration in seconds
+ `startTime`: `2017-09-11T08:35:04.586Z` (string, required) - Start date time in ISO8601 format


## Ride (object)
Ride details
### Properties
+ `driverId`: `afbe99d288c893e` (string, required) - Driver ID
+ `carType`: `Standard` (CarType, required) - Ride car type
+ `currency` (MoneyRepresentation, required)
+ `driverDistanceRuler`: 1609 (number, required) - Distance, in meters, to use for the driver rate per Distance
+ `driverRatePerMinute`: 0.75 (number, required) - Driver rate per minute driven
+ `driverRatePerDistance`: 1.1 (number, required) - Driver rate per unit of driverDistanceRuler
+ `driverMinimumRate`: 7.0 (number, required) - Minimum fare requested by the driver


## RidePrice (Ride)
Ride details with estimated price
### Properties
+ `estPrice`: 12.75 (number, required) - Estimated ride price according to driver's rate


## FairPrice (object)
Fair price for a car type on a planned route
### Properties
+ `currency` (MoneyRepresentation, required)
+ `typicalPrice`: 28.75 (number, required) - Typical price that is charged for the ride under typical conditions of weather, traffic, demand
+ `fairPrice`: 29.95 (number, required) - Estimated fair price in current conditions
+ `fairPriceLow`: 28.18 (number, required) - Estimated lower range of fair price in current conditions
+ `fairPriceHigh`: 32.50 (number, required) - Estimated higher range of fair price in current conditions
+ `minimumPrice`: 20.50 (number, required) - Lowest price for a similar ride ever observed
+ `maximumPrice`: 53.10 (number, required) - Highest price for a similar ride ever observed


## TripInfo (object)
Details of a finished trip
### Properties
+ `route` (Route, required) - Trip route
+ `ride` (Ride, required) - Trip ride
+ `ridePrice` (RidePrice, required) - Trip ride price
+ `fairPrice` (FairPrice, required) - Trip fair price
+ `tripPrice`: 12.75 (number, required) - Accepted price for trip
+ `tripStartTime`: `2017-09-11T10:26:27.744Z` (string, required) - Trip start date time in ISO8601 format
+ `tripEndTime`: `2017-09-11T11:16:07.463Z` (string, required) - Trip end date time in ISO8601 format
+ `tripDuration`: 3897 (number, required) - Trip duration in seconds
+ `tripDistance`: 6989 (number, required) - Trip distance travelled


## PriceChange (object)
A change to trip price
### Properties
+ `change`: 1.50 (number, required) - Change to trip price
+ `reason`: `Actual distance more than planned` (string, required) - Detail about change


## PriceAdjust (object)
Overall adjustment to trip price
### Properties
+ `currency` (MoneyRepresentation, required)
+ `adjustedPrice`: 14.50 (number, required) - Adjusted trip price 
+ `changes` (array[PriceChange], required) - Changes to trip price